#! /usr/bin/env bash
#=========================================================================
# Copyright (c) 2018 GemTalk Systems, LLC <dhenrich@gemtalksystems.com>.
#
#   MIT license: https://github.com/dalehenrich/Rowan/blob/master/LICENSE
#=========================================================================

set -e

rowan_tag="$1"

#
# 1. clone the Rowan, Jade (Jadeite), RowanSample1, and RowanSample2 projects
# 2. confirm that the master branches of Rowan and Jade are on the correct tag
# 3. Create Jadeite runtime directory (Jadeite_runtime)
# 4. create manifest.txt and list the sha of the commit for each of the git 
#    projects along with the name of the file or directory
# 5. zip up the Rowan, RowanSample1, and RowanSample2 projects, the 
#    Jadeite_runtime directory  plus any .pdf documents present (only expect 
#     one PDF file)
# 6. Archive the zip file and stage for delivery
#
rowan_tag="$1"
jadeite_tag="$2"

commit_match_tag() {
  git describe --match "$1" HEAD
}
padded_manifest_line() {
  line='               |  '
  PROC_NAME="$1"
  printf "%s%s" $PROC_NAME "${line:${#PROC_NAME}}" >> manifest.txt
  PROC_NAME="$2"
  printf "%s%s" $PROC_NAME "${line:${#PROC_NAME}}" >> manifest.txt
  PROC_NAME="$3"
  printf "%s%s \n" $PROC_NAME "${line:${#PROC_NAME}}" >> manifest.txt
}
validate_tag() {
  projectName="$1"
  label="$2"
  tagName="$3"
  theTag=""
  pad=""
  if [ "$projectName" = "Rowan" ] ; then
    pad="	"
  fi
  pushd $projectName
    git checkout master
    if [ "$tagName"x != "x" ] ; then
      theTag=`commit_match_tag "$tagName"`
    else
      theTag="-"
    fi
    theCommit=`git rev-parse --short HEAD`
  popd
  padded_manifest_line "$label" "$theTag" "$theCommit"
}

cd $ROWAN_PROJECTS_HOME/Rowan/staging

#rm -rf Rowan Jade RowanSample1 RowanSample2 manifest.txt Jadeite_runtime_*
#
#git clone git@github.com:dalehenrich/Rowan.git
#git clone git@github.com:ericwinger/Jade.git
#git clone git@github.com:dalehenrich/RowanSample1.git
#git clone git@github.com:dalehenrich/RowanSample2.git

rm -rf manifest.txt Jadeite_runtime_* *.zip

echo "------------------------------" >> manifest.txt
echo "  Git clones file(s)" >> manifest.txt
echo "------------------------------" >> manifest.txt
#echo "---------------|-----------------|-----------------|" >> manifest.txt
padded_manifest_line "Git_Project" "Tag" "SHA"
echo "---------------|-----------------|-----------------|" >> manifest.txt
validate_tag Rowan Rowan "$rowan_tag"
validate_tag RowanSample1 RowanSample1
validate_tag RowanSample2 RowanSample2

# create Jadeite runtime directory
jadeite_runtime_dirName="Jadeite_runtime_${jadeite_tag}"
mkdir "$jadeite_runtime_dirName"
pushd Jade/runtime
  cp -r * ../../${jadeite_runtime_dirName}
popd

echo "" >> manifest.txt
echo "------------------------------" >> manifest.txt
echo "  Jadeite runtime directory" >> manifest.txt
echo "------------------------------" >> manifest.txt
echo "Jadeite_runtime_${jadeite_tag}" >> manifest.txt

echo "" >> manifest.txt
echo "------------------------------" >> manifest.txt
echo "  README file(s)" >> manifest.txt
echo "------------------------------" >> manifest.txt
count=0
for entry in `pwd`/*.pdf
do
  pdfFilename=$(basename "$entry")
  echo "$pdfFilename" >> manifest.txt
  count=$((count + 1))
done

if [ $count -ne 1 ] ; then
  echo "Expected only a single pdf file, found $count"
  exit 1
fi

# create zip file
base="${pdfFilename%.*}"

zip -r ${base}.zip manifest.txt ${jadeite_runtime_dirName} *.pdf Rowan RowanSample1 RowanSample2
