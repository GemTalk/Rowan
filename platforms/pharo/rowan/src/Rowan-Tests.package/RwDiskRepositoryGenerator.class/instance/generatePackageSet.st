generator
generatePackageSet

	| packageName1 packageName2 packageNames myPackageSet className1 className2 classDefinitionsDictionary1 classDefinitionsDictionary2 classExtensionDefinitionsDictionary2 |
	packageName1 := 'CombinedTestPackage1'.
	packageName2 := 'CombinedTestPackage2'.
	className1 := 'TestClass1'.
	className2 := 'TestClass2'.
	packageNames := {packageName1.
	packageName2}.
	classDefinitionsDictionary1 := Dictionary new
		at: className1
			put:
				((RwClassDefinition
						newForClassNamed: className1
						super: 'Object'
						instvars: #('instVar1')
						classinstvars: #('classInstVar1' 'classInstVar2')
						classvars: #('ClassVar1')
						category: packageName1
						comment:
							'I am a class generated by Rowan tests. My name is ' , className1
								, ', what''s yours?'
						pools: #()
						type: 'normal')
						instanceMethodDefinitions: (self instanceMethodsForClass: className1);
						classMethodDefinitions: (self classMethodsForClass: className1);
						gs_options: self gs_options;
						gs_constraints: self gs_constraints;
						yourself);
		yourself.
	classDefinitionsDictionary2 := Dictionary new
		at: className2
			put:
				((RwClassDefinition
						newForClassNamed: className2
						super: 'Object'
						instvars: #('instVar1')
						classinstvars: #('classInstVar1' 'classInstVar2')
						classvars: #('ClassVar1')
						category: packageName2
						comment:
							'I am a class generated by Rowan tests. My name is ' , className2
								, ', what''s yours?'
						pools: #()
						type: 'normal')
						instanceMethodDefinitions: (self instanceMethodsForClass: className2);
						classMethodDefinitions: (self classMethodsForClass: className2);
						yourself);
		yourself.
	classExtensionDefinitionsDictionary2 := Dictionary new
		at: className1
			put:
				((RwClassExtensionDefinition newForClassNamed: className1)
						classMethodDefinitions:
								(self
										classExtensionMethodDefinitionsForClass: className1
										inPackage: packageName2);
						instanceMethodDefinitions:
								(self
										instanceExtensionMethodDefinitionsForClass: className1
										inPackage: packageName2);
						yourself);
		yourself.
	myPackageSet := RwPackageSetDefinition new
		addPackage:
				(RwPackageDefinition
						withProperties: (Dictionary with: 'name' -> packageName1)
						classDefinitions: classDefinitionsDictionary1
						classExtensions: Dictionary new);
		addPackage:
				(RwPackageDefinition
						withProperties: (Dictionary with: 'name' -> packageName2)
						classDefinitions: classDefinitionsDictionary2
						classExtensions: classExtensionDefinitionsDictionary2);
		yourself.
	^ myPackageSet
