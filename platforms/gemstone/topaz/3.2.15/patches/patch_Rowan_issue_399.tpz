output push patch_issue_399.out

  iferr 1 stk
  iferr 2 stack
  iferr 3 exit 1
	display oops

  set u SystemUser p swordfish
  login

	run
	| ug |
	"patch missing RwSymbolDictionaryRegistry in UserGlobals"
	(UserGlobals at: #RwSymbolDictionaryRegistry ifAbsent: []) 
		ifNotNil: [
			GsFile gciLogServer: '---RwSymbolDictionaryRegistry is present in UserGlobals'.
			^ true ].
	GsFile gciLogServer: '---Patching missing RwSymbolDictionaryRegistry in UserGlobals'.

	ug := Rowan image newOrExistingSymbolDictionaryNamed: 'UserGlobals'. "will create new registry if needed"
	Rowan projectNames do: [:projectName |
		| project loadedProject registry packageRegistry classRegistry classExtensionRegistry methodRegistry |
		GsFile gciLogServer: '---Checking project: ', projectName printString.
		project := RwProject newNamed: projectName.
		registry := ug rowanSymbolDictionaryRegistry.
		packageRegistry := registry packageRegistry.
		classRegistry := registry classRegistry.
		classExtensionRegistry := registry classExtensionRegistry.
		methodRegistry := registry methodRegistry.
		loadedProject := Rowan image loadedProjectNamed: projectName.
		loadedProject loadedPackages do: [:loadedPackage |
			(project symbolDictNameForPackageNamed: loadedPackage name) == #UserGlobals
				ifTrue: [
					packageRegistry 
						at: loadedPackage name 
						ifAbsentPut: [
							GsFile gciLogServer: 'Patch loaded package ', loadedPackage printString.
							loadedPackage ].

					loadedPackage
						loadedClasses
							valuesDo: [:aLoadedClass |
								classRegistry 
									at: aLoadedClass handle classHistory 
									ifAbsentPut: [
										GsFile gciLogServer: 'Patch loaded class ', aLoadedClass printString.
										aLoadedClass ].

								aLoadedClass
									loadedInstanceMethods valuesDo: [:loadedMethod |
										methodRegistry 
											at: loadedMethod handle 
											ifAbsentPut: [
												GsFile gciLogServer: 'Patch loaded method ', aLoadedClass name, '>>', loadedMethod selector.
												loadedMethod ] ].
								aLoadedClass
									loadedClassMethods valuesDo: [:loadedMethod |
										methodRegistry 
											at: loadedMethod handle 
											ifAbsentPut: [
												GsFile gciLogServer: 'Patch loaded method ', aLoadedClass name, '>>', loadedMethod selector.
												loadedMethod ] ] ].
					loadedPackage
						loadedClassExtensions
							valuesDo: [:aLoadedClass | 
								classExtensionRegistry 
									at: aLoadedClass handle classHistory 
									ifAbsentPut: [
										GsFile gciLogServer: 'Patch loaded class extension ', aLoadedClass printString.
										aLoadedClass ].

								aLoadedClass
									loadedInstanceMethods valuesDo: [:loadedMethod |
										methodRegistry 
											at: loadedMethod handle 
											ifAbsentPut: [
												GsFile gciLogServer: 'Patch loaded extension method ', aLoadedClass name, ' class>>', loadedMethod selector.
												loadedMethod ] ].
								aLoadedClass
									loadedClassMethods valuesDo: [:loadedMethod |
										methodRegistry 
											at: loadedMethod handle 
											ifAbsentPut: [
												GsFile gciLogServer: 'Patch loaded extension method ', aLoadedClass name, ' class>>', loadedMethod selector.
												loadedMethod] ] ] ] ] ].

	GsFile gciLogServer: '--Finished Patching missing RwSymbolDictionaryRegistry'.
	true
%
  commit

errorCount

  logout

output pop

