#!/usr/bin/gemstone/topaz
#
#	write project source for loaded projects in a 3.5.0 image
#
# If you are using GsDevKit_home[1] and have stash[2] installed, this topaz 
#	script can be directly executed:
#
#		$ROWAN_PROJECTS_HOME/Rowan/platforms/gemstone/topaz/3.5.0/write_project_source.tpz <gsdevkit-stone-name> -lq
#
# If you are not using GsDevKit_home, you can directly run this script as long as
# 	1. $GEMSTONE is defined
# 	2. $GEMSTONE/bin is you path
#	then execute using the following invocation
#
#		$ROWAN_PROJECTS_HOME/Rowan/platforms/gemstone/topaz/3.5.0/install_1.tpz -lq
#
#	[1] https://github.com/GsDevKit/GsDevKit_home
# [2] https://github.com/dalehenrich/stash
#

	omit pushonly
  iferr 1 stk
  iferr 2 stack
#  iferr 3 exit 1

  set user SystemUser p swordfish
  login

run

	| currentGsVersion projectDefinition projectSetDefinition projectSetModification visitor topazFileNameMap
		repositoryRoot |
	currentGsVersion := (System stoneVersionReport at: 'gsVersion') asRwGemStoneVersionNumber.
	currentGsVersion = '3.5.0' asRwGemStoneVersionNumber
		ifFalse: [ 
			self error: 'This script should only be run using GemStone 3.5.0. Current version is ', currentGsVersion printString ].
	repositoryRoot := '$ROWAN_PROJECTS_HOME/Rowan/platforms/gemstone/topaz/3.5.0/project_src' asFileReference.
	repositoryRoot ensureCreateDirectory.
	repositoryRoot deleteAllChildren.
	{ 'Cypress' . 'FileSystemGs' . 'Rowan' . 'Tonel' . 'STON' } do: [:projectName |
		projectDefinition := (Rowan image loadedProjectNamed: projectName) asDefinition.
		projectSetDefinition := RwProjectSetDefinition new.
		projectSetDefinition addDefinition: projectDefinition.
		projectSetModification := projectSetDefinition compareAgainstBase: RwProjectSetDefinition new.
		topazFileNameMap := Dictionary new.
		topazFileNameMap at: projectName  put: {}.
		projectDefinition packageNames do: [:packageName |
			((#('Rowan-Tests'  'Rowan-Services-Tests' 'Rowan-Tests-32x' 'Rowan-Tests-35x' 'Rowan-Tests-GemStone') 
					includes: packageName) 
						and: [ projectName = 'Rowan'])
				ifTrue: [  (topazFileNameMap at: 'Rowan-Tests' ifAbsentPut: [{} ]) add: packageName ]
				ifFalse: [ (topazFileNameMap at: projectName) add: packageName ] ].
		visitor := RwGsModificationTopazWriterVisitor new
			repositoryRootPath: repositoryRoot;
			topazFilenamePackageNamesMap: topazFileNameMap;
			yourself.
		visitor visit: projectSetModification ].
%

	exit
