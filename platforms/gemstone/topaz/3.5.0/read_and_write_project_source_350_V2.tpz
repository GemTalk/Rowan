#!//usr/local/bin/smalltalk/gemstone/topaz
#
#	read project source from rowan/source and then write project source for loaded projects in a 3.5.0 image
#
# If you are using GsDevKit_home[1] and have stash[2] installed, this topaz 
#	script can be directly executed:
#
#		$ROWAN_PROJECTS_HOME/Rowan/platforms/gemstone/topaz/3.5.0/read_and_write_project_source_350.tpz <gsdevkit-stone-name> -lq
#
# If you are not using GsDevKit_home, you can directly run this script as long as
# 	1. $GEMSTONE is defined
# 	2. $GEMSTONE/bin is you path
#	then execute using the following invocation
#
#		$ROWAN_PROJECTS_HOME/Rowan/platforms/gemstone/topaz/3.5.0/install_1.tpz -lq
#
#	[1] https://github.com/GsDevKit/GsDevKit_home
# [2] https://github.com/dalehenrich/stash
#

 omit pushonly
  iferr 1 stk
  iferr 2 stack
#  iferr 3 exit 1
	display oops

  set user SystemUser p swordfish
  login

run
	| platformConfigurationAttributes projectSetModification visitor
		topazFileNameMap repositoryRoot packageCreateTool projectLoadTool 
		auditFailures gsFileName |

	platformConfigurationAttributes := {
		'common'.
		'gemstone'.
		'gemstone-kernel'.
		'3.5.0' asRwGemStoneVersionNumber.	"want to read 3.5.0 packages"
	}.
	repositoryRoot := '/home/dhenrich/rogue/_homes/rogue/_home/server/stones/rowan_exp_350/rowan_gs' asFileReference.
	repositoryRoot ensureCreateDirectory.
	repositoryRoot deleteAllChildren.
	{
		{
			'file:$ROWAN_PROJECTS_HOME/Rowan/rowan/v2/specsV2/RowanAll.ston'.
			'$ROWAN_PROJECTS_HOME'
		}.		{
			'file:$ROWAN_PROJECTS_HOME/Rowan/rowan/v2/specsV2/RowanV1.ston'.
			'$ROWAN_PROJECTS_HOME'
		}.		{
			'file:$ROWAN_PROJECTS_HOME/Rowan/rowan/v2/specsV2/RowanV2.ston'.
			'$ROWAN_PROJECTS_HOME'
		}.		{
			'file:$ROWAN_PROJECTS_HOME/Rowan/rowan/v2/specsV2/RowanComponent.ston'.
			'$ROWAN_PROJECTS_HOME'
		}.
	} 
	do: [:ar |
		"Read project and packages from disk."
		| configNames groupNames resolvedProject theProjectSetDefinition loadSpecUrl loadSpec projectsHome |
		loadSpecUrl := ar at: 1.
		projectsHome := ar at: 2.
		loadSpec := RwSpecification fromUrl: loadSpecUrl.
		gsFileName := loadSpec specName.
		resolvedProject := loadSpec
			projectsHome: projectsHome;
			resolve.
		theProjectSetDefinition :=  resolvedProject read: platformConfigurationAttributes.
		theProjectSetDefinition
			do: [:projectDefinition |	
				GsFile gciLogServer: 'Project: ', projectDefinition name.
				projectDefinition packageNames do: [:pkgName | GsFile gciLogServer: '	', pkgName ] ].

		topazFileNameMap := Dictionary new.
		topazFileNameMap at: gsFileName put: {}.
		theProjectSetDefinition keys do: [:projectName |
			| projectDefinition |
			projectDefinition := theProjectSetDefinition projectNamed: projectName.
			projectSetModification := theProjectSetDefinition compareAgainstBase: RwProjectSetDefinition new.
			projectDefinition packageNames do: [:packageName |
				(topazFileNameMap at: gsFileName) add: packageName ].
			visitor := RwGsModificationTopazWriterVisitor new
				repositoryRootPath: repositoryRoot;
				topazFilenamePackageNamesMap: topazFileNameMap;
				yourself.
			visitor visit: projectSetModification ] ].
%
