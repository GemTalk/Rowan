#!//usr/local/bin/smalltalk/gemstone/topaz
#
#	read project source from rowan/source and then write project source for loaded projects in a 3.5.0 image
#
# If you are using GsDevKit_home[1] and have stash[2] installed, this topaz 
#	script can be directly executed:
#
#		$ROWAN_PROJECTS_HOME/Rowan/platforms/gemstone/topaz/3.5.0/read_and_write_project_source_350.tpz <gsdevkit-stone-name> -lq
#
# If you are not using GsDevKit_home, you can directly run this script as long as
# 	1. $GEMSTONE is defined
# 	2. $GEMSTONE/bin is you path
#	then execute using the following invocation
#
#		$ROWAN_PROJECTS_HOME/Rowan/platforms/gemstone/topaz/3.5.0/install_1.tpz -lq
#
#	[1] https://github.com/GsDevKit/GsDevKit_home
# [2] https://github.com/dalehenrich/stash
#

 omit pushonly
  iferr 1 stk
  iferr 2 stack
#  iferr 3 exit 1
	display oops

  set user SystemUser p swordfish
  login

run
	| platformConditionalAttributes platformConditionalAttributesDiskConfigs projectSetModification visitor 
		topazFileNameMap repositoryRoot packageCreateTool projectLoadTool 
		auditFailures gsFileName |

	platformConditionalAttributes := {
		'common'.
		'gemstone'.
		'gemstone-kernel'.
		'3.5.0' asRwGemStoneVersionNumber.	"want to read 3.5.0 packages"
	}.
	platformConditionalAttributesDiskConfigs := {
		'common'.
		'gemstoneBase'.	"custom attribute - for packages that should ONLY be loaded standalone"
		'gemstone-kernel'.
		'3.5.0' asRwGemStoneVersionNumber.	"want to read 3.5.0 packages"
	}.
	repositoryRoot := '$ROWAN_PROJECTS_HOME/Rowan/platforms/gemstone/topaz/3.5.0/project_src_v2' asFileReference.
	repositoryRoot ensureCreateDirectory.
	repositoryRoot deleteAllChildren.
	{
			'file:$ROWAN_PROJECTS_HOME/Rowan/rowan/v2/specs/RowanV1V2.ston'.
			'$ROWAN_PROJECTS_HOME'.
			platformConditionalAttributes
	} 
	do: [:ar |
		"Read project and packages from disk."
		| resolvedProject loadSpecUrl loadSpec projectsHome conditionalAttributes projectSetDefinition |
		loadSpecUrl := ar at: 1.
		projectsHome := ar at: 2.
		conditionalAttributes := ar at: 3.
		loadSpec := RwSpecification fromUrl: loadSpecUrl.
		gsFileName := loadSpec specName.
		resolvedProject := loadSpec
			projectsHome: projectsHome;
			resolve.
		projectSetDefinition :=  resolvedProject read: conditionalAttributes.
 ].
%
