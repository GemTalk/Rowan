set -e
. defStone.env
export vers="3.2.15"

rm -rf *.log *.out

$GS_HOME/sys/local/bin/newBuild_snapshot

startTopaz $GEMSTONE_NAME -l << EOF

  iferr 1 stk
  iferr 2 stack
  iferr 3 exit 1

  set u SystemUser p swordfish
  login

# disable the GsPackagePolicy restrictedClasses, so that GsNMethod extension
#   methods can be included in the packages
#
run
| cls index set |
cls := GsPackagePolicy.
index := cls class allInstVarNames indexOfIdentical: #'restrictedClasses'.
set := cls instVarAt: index.
set removeAll: set.

(AllUsers userWithId: 'DataCurator') addPrivilege: #'CompilePrimitives'.
System commit
%

input $GS_HOME/shared/repos/Rowan/platforms/gemstone/topaz/3.2.15/cypress/bootstrapCypressSupport.topaz
input $GS_HOME/shared/repos/Rowan/platforms/gemstone/topaz/3.2.15/ston/bootstrapStonSupport.topaz
input $GS_HOME/shared/repos/Rowan/platforms/gemstone/topaz/3.2.15/tonel/bootstrapTonelSupport.topaz


  commit
  exit
EOF


startTopaz $GEMSTONE_NAME -l << EOF

  iferr 1 stk
  iferr 2 stack
  iferr 3 exit 1

# usually DataCurator
  login

  run
  | packageManager repo |
  packageManager := CypressPackageManager3 new.
  repo := CypressAbstractRepository
    onUrl: (CypressUrl absoluteFromText: 'tonel:$GS_HOME/shared/repos/Rowan/src/tonel/'  )
    alias: ''.
  packageManager
    defaultSymbolDictionaryName: #'UserGlobals'.
  #('Cypress-Core' 'Rowan-Url' 'Rowan-Core' 'Rowan-Definitions' 'Rowan-GemStone' 'Rowan-Cypress' 'Rowan-Tests' 'Rowan-Tode' 'Rowan-Services')
    do: [ :packageName | 
      packageManager
        addResolvedReference:
          (CypressResolvedReference name: packageName repository: repo) ].
  packageManager loadResolvedReferences
%

  run
  Rowan addProject: (STON fromString: (GsFile openReadOnServer: '$GS_HOME/server/stones/$GEMSTONE_NAME/rowanSpec.ston') contentsOfEntireFile)
%
  commit
  exit
EOF
